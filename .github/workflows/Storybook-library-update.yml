name: Update Storybook package.json items
on:
  schedule:
    # * is a special character in YAMLso you have to quote this string
    - cron:  '0 1 * * *'
  workflow_dispatch:
    inputs:
      description:
        description: 'Manual run of update Libs'  

jobs:
  updateLibs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: "develop"

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      # run script in prem, extract to lib, update versions.txt on each file
      - name: list folder
        run: |
          pwd
          ls -ltr
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: List versions
        run: | # List versions
          npm view storybook versions

      - name: What changed
        run: |
         export outdated=`npm outdated`
         echo $outdated  >> $GITHUB_STEP_SUMMARY
         export version=`echo $outdated|grep ^storybook|awk '{ print $4 }'`          
         echo '::set-output name=OUTDATED_LIST::$outdated'
         echo '::set-output name=OUTDATED_VERSION::$version'
        id: what-changed-data

      - name: Update package.json
        run: | # Update storybook
          npx storybook@latest upgrade  -y 
      - name: Install latest
        run: | # Install packages https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#use-private-packages
          npm install --no-audit --ignore-scripts


      # `npm rebuild` will run all those post-install scripts for us.
      - name: rebuild and prepare
        run: npm rebuild && npm run prepare --if-present

        # todo work out how to extract 'outdated' to be commit message
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: "update storybook js libraries \r\n ${{ steps.what-changed-data.outputs.OUTDATED_LIST }}"
          title: update storybook ${{ steps.what-changed-data.outputs.OUTDATED_VERSION }}"
          body: "update storybook js premium libraries ${{ steps.what-changed-data.outputs.OUTDATED_LIST }}"
          branch: update-storybook-libraries
          base: main
